<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css"> <!-- load bootstrap css -->
    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css">

</head>

<body ng-app = "myApp" ng-controller="myController" >

<form  name = "form"  ng-submit="submitForm()">

    <div class="form-group">
        <label >Enter the user email:</label>
        <textarea class="form-control" rows="1" name="email" placeholder = "Enter user name" ng-model = "formData.email" ></textarea>

    </div>

    <button type="submit"   class="btn btn-warning btn-lg">Search this user</button>

</form>

<div ng-show = "!isAvailable()">
    <p>{{message}}</p>


</div>
<div ng-show = "isAvailable()">
    <p>{{email}}</p>
    <p>Admin:{{admin}}</p>
    <p>Banned:{{banned}}</p>
    <p>{{timeCreated}}</p>
    <p>{{scores}}</p>
    <button ng-click="reportthisUser(email)" class="btn btn-default">Report this user</button>

</div>


<modal title="Report user form" visible="showModal" ng-submit="sendReport()">
    <form role="form">
        <p>Email address of the user being reported </p>
        <input type = "email" ng-model="stickie_text" type="text" id="sticky_content" />
        <div class="form-group">
            <label for="repeatSelect"> Select admin : </label>
            <select name="repeatSelect" id="repeatSelect" ng-model="adminEmails.repeatSelect">
                <option ng-repeat="option in adminEmails.availableOptions" value="{{option.email}}">{{option.email}}</option>
            </select>
        </div>

        <div class="form-group">
            <label >Enter your report here:</label>
            <textarea class="form-control" rows="5" name="report" placeholder="Enter  your report here" ng-model = "formData.report"></textarea>
        </div>

        <button type="submit" class="btn btn-default">Submit</button>
    </form>
</modal>
</div>


<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.0/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js" ></script>
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular-route.min.js"></script>

<script>

    var app = angular.module('myApp', []);


    console.log('Controller is ready!');
    app.controller('myController',['$scope','$http',function($scope,$http){
        console.log('Controller is ready!');
        $scope.formData = {};
        $scope.showModal = false;
        $scope.submitForm = function() {
            console.log("submit");
            var onSuccess = function (response) {
                console.log(response.data);
                console.log(response.data.success);

                $scope.formData = {};

                $scope.isAvailable = function () {
                    if (response.data.success==false) {
                        $scope.message = response.data.message;
                        console.log(response.data.message);
                        return false;
                    }
                    else {

                        $scope.email = response.data.user.local.email;
                        $scope.admin = response.data.user.local.admin;
                        $scope.banned = response.data.user.local.banned;
                        $scope.timeCreated = response.data.user.local.timeCreated;
                        $scope.scores = response.data.scores;
                        $scope.reportthisUser = function(email){
                            $scope.showModal = !$scope.showModal;
                            var email = email;

                            $scope.stickie_text =email;


                            $scope.formData = {};

                            $http({
                                method: 'GET',
                                url: '/report'
                            }).then(function successCallback(response) {

                                var myData = [];
                                for(var i = 0; i <response.data.length;i++){

                                    var emailList = {email:response.data[i].local.email};
                                    myData.push(emailList);

                                }
                                $scope.adminEmails = {
                                    repeatSelect: null,
                                    availableOptions:myData
                                };

                                // this callback will be called asynchronously
                                // when the response is available
                            }, function errorCallback(response) {
                                // called asynchronously if an error occurs
                                // or server returns response with an error status.
                            });

                            $scope.sendReport = function(){


                                    var adminEmail = $scope.adminEmails.repeatSelect;


                                var report = $scope.formData.report;

                                $scope.data = {email: email , report:report,adminEmail:adminEmail};
                                $http({
                                    method: 'POST',
                                    url: '/report',
                                    data: $scope.data
                                }).then(function successCallback(response) {
                                    console.log(response);
                                    /*
                                     console.log(response.data[0].local);
                                     for(var i = 0; i <response.data.length;i++){
                                     console.log("zzz");
                                     }
                                     */

                                    // this callback will be called asynchronously
                                    // when the response is available
                                }, function errorCallback(response) {
                                    // called asynchronously if an error occurs
                                    // or server returns response with an error status.
                                    console.log("Error!");
                                });







                            }




                        }


                        return true;
                    }
                }


            }
            var onFailure = function(response){
                console.log("Error!");

            }
            $http.post('/search',$scope.formData).then(onSuccess,onFailure);
        }








    }]);

    app.directive('modal', function () {
        return {
            template: '<div class="modal fade">' +
            '<div class="modal-dialog">' +
            '<div class="modal-content">' +
            '<div class="modal-header">' +
            '<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>' +
            '<h4 class="modal-title">{{ title }}</h4>' +
            '</div>' +
            '<div class="modal-body" ng-transclude></div>' +
            '</div>' +
            '</div>' +
            '</div>',
            restrict: 'E',
            transclude: true,
            replace:true,
            scope:true,
            link: function postLink(scope, element, attrs) {
                scope.title = attrs.title;

                scope.$watch(attrs.visible, function(value){
                    if(value == true)
                        $(element).modal('show');
                    else
                        $(element).modal('hide');
                });

                $(element).on('shown.bs.modal', function(){
                    scope.$apply(function(){
                        scope.$parent[attrs.visible] = true;
                    });
                });

                $(element).on('hidden.bs.modal', function(){
                    scope.$apply(function(){
                        scope.$parent[attrs.visible] = false;
                    });
                });
            }
        };
    });



</script>
</body>
</html>